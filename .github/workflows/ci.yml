name: FrontendDiscWeb CI

on:
  push:
    branches:
      - fixing_building
  pull_request:
    branches:
      - fixing_building

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Set up environment variables
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> $GITHUB_ENV
          echo "VITE_APP_SITE_KEY=${{ secrets.VITE_APP_SITE_KEY }}" >> $GITHUB_ENV
          echo "VITE_APP_TRACKING_ID=${{ secrets.VITE_APP_TRACKING_ID }}" >> $GITHUB_ENV    

      - name: List all environment variables
        run: env

      - name: Install dependencies
        run: npm install

#      - name: Run lint
#        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: dist/

      - name: Notify Slack on build status
        uses: act10ns/slack@v2
        with:
          channel: '#development'
          status: ${{ job.status }}
          steps: ${{ toJSON(steps) }}
        if: always()

  push_to_dockerhub:
    runs-on: ubuntu-latest
    needs: build
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} \
                       --build-arg VITE_APP_TRACKING_ID=${{ secrets.VITE_APP_TRACKING_ID }} \
                       --build-arg VITE_APP_SITE_KEY=${{ secrets.VITE_APP_SITE_KEY }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/discweb-frontend:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/discweb-frontend:${{ github.sha }}

      - name: Notify Slack on Docker push status
        uses: act10ns/slack@v2
        with:
          channel: '#development'
          status: ${{ job.status }}
          steps: ${{ toJSON(steps) }}
        if: always()

